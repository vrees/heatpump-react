
entity Processdata {
		// aktueller Zeitstempel
        timestamp Instant

        /** Status der Statemachine = Betriebszustand */
        state States

		//***** Temperatures ********************/

        /** Verdampfungstemperatur in °C */
        temperatureEvaporatingIn Float

        /**  Verdampfungstemperatur out in °C */
        temperatureEvaporatingOut Float

        /** Vorlauf-Temperatur in °C */
        temperatureFlow Float

        /** Rücklauf-Temperatur in °C  */
        temperatureReturn Float

        /** SchaltFuehlerTemperatur: Ein-/Aus-SchaltFühler misst die Temperatur am Puffer oben in °C     */
        temperatureSwitchOnSensor Float

        /** SaugTemperatur: Kühlmittel-Temperatur am Ausgang des Verdampfers vor dem Eingang des Verdichters, also auf der Niederdruck-Seite.
         *  Wird zusammen mit dem Druck im Verdampfer zur Berechnung der Überhitzung benötigt
         *  GesättigteVerdampfungstemperatur = Druck mal TemperaturKonstante des Kühlmittels
         *  Ueberhitzung = Temperatur des ueberhitzten Gases - GesättigteVerdampfungstemperatur
         */
        temperatureOverheatedGas Float



        //***** Pressure and Pressure Differences ********************/

		/** Hochdruck Kältekreis in bar */
        pressureHigh Float

        /** Niederdruck Kältekreis in bar */
        pressureLow Float

        /** Druckdifferenz Verdampfer in mbar, minVal=0 maxVal=200 */
        pressureDiffenceEvaporator Float



        //***** Digital Inputs  *************************/

		/** Wärme Anforderung */
        heatRequest Boolean

        /** Taster Ein-/Aus- Quittierung */
        userConfirmation Boolean

        /** Status der Heizpumpe am Relais */
        alarmExpansionValve Boolean

        /** Alarm des Elektronischen Expansionsentils EEV */
        alarmExpansionValve Boolean

        /** Stoerung Durchfluss - minimale Druchlussmenge im Verdampfer unterschritten  */
        incidentFlow Boolean

        /**  Stoerung Verdichter / Motorschutzschalter */
        incidentCompressor Boolean

        /** Stoerung Niederdruck: Ranco-Thermostat meldet zu niedrigen Niederdruck */
        incidentLowPressure Boolean

        /** Stoerung Hochdruck Ranco-Thermostat meldet zu hohen Hochdruck */
        incidentHighPressure Boolean


        //***** Digital Outputs  *************************/

        /** Status Heizungspume: Ein/Aus */
        operatingStateWaterPump Boolean

        /** Status Verdichter: Ein/Aus */
        operatingStateCompressor Boolean



        //***** Calculated Values  *************************/

        /**  Überhitzung:  Berechnet aus Kühlmittel-Temperatur am Ausgang des Verdampfers und dem Druck mal TemperaturKonstante des Kühlmittels */
        calculatedOverheatTemperature Float

        /** Warnung Niederdruck (Soft-Wert falls gemessener Niederdruck unter konfigurierte Grenze fällt) */
        warningLowPressure Boolean

        /** Warnung Hochdruck (Soft-Wert falls gemessener Hochdruck über konfigurierte Grenze steigt) */
        warningHighPressure Boolean

        /** wait n-th loops -then transfer processdate to GUI */
        waitCounter Integer
}

enum States {
    OFF, READY, RUNNING, BACKLASH, ERROR
}

enum Events {
    SWITCH_ON, SWITCH_OFF, HEAT_REQUEST, TEMPERATURE_REACHED, COOLDED_DOWN
}

enum FailureLevel {
    ERROR, WARNING, INFO
}

entity FailureMessage {
    failureLevel FailureLevel
    msg String
    parameter String
}

relationship OneToMany {
	Processdata{messages} to FailureMessage
}


paginate Processdata with pagination
